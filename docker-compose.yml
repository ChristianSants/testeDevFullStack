version: '3.7'

services:

  #back
  app:
    container_name: app
    build:
      context: ./back
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "9000:9000"
    working_dir: /var/www/
    volumes:
        - ./back/:/var/www
    depends_on:
      - redis
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - frontend-volume:/var/www/html
      - ./back/docker/nginx/:/etc/nginx/conf.d/
    networks:
      - app_network
    depends_on:
      - app
      - frontend

  db:
    image: mysql:5.7.22
    restart: unless-stopped
    environment:
        MYSQL_DATABASE: ${DB_DATABASE:-laravel}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
        MYSQL_PASSWORD: ${DB_PASSWORD:-userpass}
        MYSQL_USER: ${DB_USERNAME:-username}
    volumes:
      - ./back/.docker/mysql/dbdata:/var/lib/mysql
    ports:
      - "3388:3306"
    networks:
      - app_network

  redis:
    image: redis:latest
    networks:
      - app_network

  #front
  frontend:
    build: ./front
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    # volumes:
    #   - ./front/:/app:delegated
    #   - /app/node_modules
    networks:
      - app_network
    # environment:
    #   - WDS_SOCKET_HOST=127.0.0.1 
    #   - CHOKIDAR_USEPOLLING=true
    #   - WATCHPACK_POLLING=true 

networks:
  app_network:
    driver: bridge